/*

Xilinx Vivado v2018.2 (64-bit) [Major: 2018, Minor: 2]
SW Build: 2258646 on Thu Jun 14 20:03:12 MDT 2018
IP Build: 2256618 on Thu Jun 14 22:10:49 MDT 2018

Process ID: 6864
License: Customer

Current time: 	Thu Feb 21 15:01:32 CST 2019
Time zone: 	Central Standard Time (America/Chicago)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 4

Screen size: 1920x1080
Screen resolution (DPI): 96
Available screens: 1
Available disk space: 56 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	C:/Xilinx/Vivado/2018.2/tps/win64/jre
Java executable location: 	C:/Xilinx/Vivado/2018.2/tps/win64/jre/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 2 GB


User name: 	jtb14b
User home directory: C:/Users/jtb14b
User working directory: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: C:/Xilinx/Vivado
HDI_APPROOT: C:/Xilinx/Vivado/2018.2
RDI_DATADIR: C:/Xilinx/Vivado/2018.2/data
RDI_BINDIR: C:/Xilinx/Vivado/2018.2/bin

Vivado preferences file location: C:/Users/jtb14b/AppData/Roaming/Xilinx/Vivado/2018.2/vivado.xml
Vivado preferences directory: C:/Users/jtb14b/AppData/Roaming/Xilinx/Vivado/2018.2/
Vivado layouts directory: C:/Users/jtb14b/AppData/Roaming/Xilinx/Vivado/2018.2/layouts
PlanAhead jar file location: 	C:/Xilinx/Vivado/2018.2/lib/classes/planAhead.jar
Vivado log file location: 	C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/vivado.log
Vivado journal file location: 	C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/vivado.jou
Engine tmp dir: 	C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/.Xil/Vivado-6864-BEN-210-04-9077

Xilinx Environment Variables
----------------------------
XILINX: C:/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_DSP: C:/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_PLANAHEAD: C:/Xilinx/Vivado/2018.2
XILINX_SDK: C:/Xilinx/SDK/2018.2
XILINX_VIVADO: C:/Xilinx/Vivado/2018.2
XILINX_VIVADO_HLS: C:/Xilinx/Vivado/2018.2


GUI allocated memory:	178 MB
GUI max memory:		3,052 MB
Engine allocated memory: 525 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// bx (ck):  Open Project : addNotify
// Opening Vivado Project: C:\Users\jtb14b\Documents\GitHub\ACESSecurityCamera\ACESSecurityCamera\ACESSecurityCameraCode\ACESSecurityCameraCode.xpr. Version: Vivado v2018.2 
// [GUI Memory]: 61 MB (+61771kb) [00:00:06]
// [Engine Memory]: 494 MB (+366336kb) [00:00:06]
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.xpr 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode' 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_project C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.xpr 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode' 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2018.2/data/ip'. 
// TclEventType: PROJECT_NEW
// [GUI Memory]: 74 MB (+10579kb) [00:00:10]
// [Engine Memory]: 545 MB (+27867kb) [00:00:10]
// [GUI Memory]: 88 MB (+9774kb) [00:00:10]
// [Engine Memory]: 612 MB (+41521kb) [00:00:11]
// [GUI Memory]: 92 MB (+566kb) [00:00:11]
// Project name: ACESSecurityCameraCode; location: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode; part: xc7a200tsbg484-1
// HMemoryUtils.trashcanNow. Engine heap size: 620 MB. GUI used memory: 43 MB. Current time: 2/21/19 3:01:37 PM CST
// Tcl Message: open_project: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 831.707 ; gain = 120.223 
dismissDialog("Open Project"); // bx (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 101 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v)]", 1, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v)]", 1, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), UI : user_input (user_input.v)]", 2, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), UI : user_input (user_input.v)]", 2, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v)]", 3, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v)]", 3, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 201ms to process. Increasing delay to 2000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 626 MB. GUI used memory: 45 MB. Current time: 2/21/19 3:31:39 PM CST
// Elapsed time: 2003 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager]", 21, true); // u (O, ck) - Node
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Tcl Command: 'load_features labtools'
// TclEventType: LOAD_FEATURE
// bx (ck):  Open Hardware Manager : addNotify
// TclEventType: HW_SESSION_OPEN
// Tcl Message: open_hw 
dismissDialog("Open Hardware Manager"); // bx (ck)
selectButton(PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET, "Hardware_auto_connect_target"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET
// Tcl Message: connect_hw_server 
// Tcl Message: INFO: [Labtools 27-2285] Connecting to hw_server url TCP:localhost:3121 
// bx (ck):  Auto Connect : addNotify
// Tcl Message: INFO: [Labtools 27-2222] Launching hw_server... 
// Tcl Message: INFO: [Labtools 27-2221] Launch Output:  ****** Xilinx hw_server v2018.2   **** Build date : Jun 14 2018-20:42:52     ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.   
// TclEventType: HW_SERVER_UPDATE
// Tcl Message: connect_hw_server: Time (s): cpu = 00:00:01 ; elapsed = 00:00:06 . Memory (MB): peak = 863.449 ; gain = 0.000 
// TclEventType: HW_TARGET_CHANGE
// TclEventType: HW_TARGET_CLOSE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_ADD
// TclEventType: HW_TARGET_UPDATE
// Tcl Message: open_hw_target 
// Tcl Message: INFO: [Labtoolstcl 44-466] Opening hw_target localhost:3121/xilinx_tcf/Digilent/210276A79380B 
// HMemoryUtils.trashcanNow. Engine heap size: 1,261 MB. GUI used memory: 50 MB. Current time: 2/21/19 3:36:57 PM CST
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: current_hw_device [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// [Engine Memory]: 1,270 MB (+657735kb) [00:35:33]
// Tcl Message: refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// Elapsed time: 10 seconds
dismissDialog("Auto Connect"); // bx (ck)
// Elapsed time: 13 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:06 ; elapsed = 00:00:06 . Memory (MB): peak = 1528.621 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 7 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 264 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 2); // k (j, ck)
// Elapsed time: 30 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Project Manager, IP Catalog]", 4, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_CORE_GEN
// HMemoryUtils.trashcanNow. Engine heap size: 1,280 MB. GUI used memory: 60 MB. Current time: 2/21/19 3:42:15 PM CST
selectTreeTable(PAResourceAtoD.CoreTreeTablePanel_CORE_TREE_TABLE, "AXI Quad SPI ; AXI4 ; Production ; Included ; xilinx.com:ip:axi_quad_spi:3.2", 4, "AXI Quad SPI", 0, false); // O (O, ck)
setText("PAResourceAtoD.CoreTreeTablePanel_CORE_TREE_TABLE_SEARCH_FIELD", "spi"); // OverlayTextField (P, ck)
expandTreeTable(PAResourceAtoD.CoreTreeTablePanel_CORE_TREE_TABLE, "AXI Quad SPI ; AXI4 ; Production ; Included ; xilinx.com:ip:axi_quad_spi:3.2", 4); // O (O, ck)
selectTreeTable(PAResourceAtoD.CoreTreeTablePanel_CORE_TREE_TABLE, "AXI Quad SPI ; AXI4 ; Production ; Included ; xilinx.com:ip:axi_quad_spi:3.2", 4, "AXI Quad SPI", 0, false, false, false, false, false, true); // O (O, ck) - Double Click
// Run Command: PAResourceCommand.PACommandNames_CUSTOMIZE_CORE
// l (ck):  Customize IP : addNotify
// TclEventType: LOAD_FEATURE
// r (ck): Customize IP: addNotify
dismissDialog("Customize IP"); // l (ck)
// [GUI Memory]: 98 MB (+641kb) [00:41:12]
// Elapsed time: 33 seconds
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (r)
dismissDialog("Customize IP"); // r (ck)
closeView(PAResourceOtoP.PAViews_IP_CATALOG, "IP Catalog"); // ad
selectButton(PAResourceTtoZ.TaskBanner_CLOSE, (String) null); // k (ay, ck)
closeTask("Program and Debug", "Hardware Manager", "DesignTask.PROGRAM_DEBUG");
// A (ck): Confirm Close: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// TclEventType: HW_OBJECT_DELETE
dismissDialog("Confirm Close"); // A (ck)
// TclEventType: HW_SERVER_CLOSE
// TclEventType: HW_SYSMON_DELETE
// TclEventType: HW_TARGET_CLOSE
// TclEventType: HW_TARGET_UPDATE
// TclEventType: DEBUG_PROBE_DELETE
// TclEventType: HW_SESSION_CLOSE
// Tcl Message: close_hw 
// bx (ck):  CLose Hardware Manager : addNotify
dismissDialog("CLose Hardware Manager"); // bx (ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 4, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 4, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 4, false, false, false, false, false, true); // B (D, ck) - Double Click
// Elapsed time: 63 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 3); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 4); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 3); // k (j, ck)
selectCodeEditor("motor_control.v", 150, 263); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 10 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
// TclEventType: DG_GRAPH_GENERATED
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// HOptionPane Warning: 'A background task is running. Please wait until it completes and try again. (Background Task)'
selectButton("OptionPane.button", "OK"); // JButton (A, H)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (A)
// 'k' command handler elapsed time: 5 seconds
dismissDialog("Run Synthesis"); // A (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// [Engine Memory]: 1,334 MB (+622kb) [00:43:27]
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 15:44:51 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// [GUI Memory]: 103 MB (+230kb) [00:44:13]
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 92 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 15:46:24 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// Elapsed time: 156 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 15:49:01 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// [GUI Memory]: 110 MB (+1753kb) [00:48:47]
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 115 seconds
selectRadioButton(PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER, "Open Hardware Manager"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// bx (ck):  Open Hardware Manager : addNotify
// TclEventType: HW_SESSION_OPEN
// Tcl Message: open_hw 
dismissDialog("Open Hardware Manager"); // bx (ck)
selectButton(PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET, "Hardware_auto_connect_target"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET
// bx (ck):  Auto Connect : addNotify
// Tcl Message: connect_hw_server 
// Tcl Message: INFO: [Labtools 27-2285] Connecting to hw_server url TCP:localhost:3121 
// Tcl Message: INFO: [Labtools 27-2222] Launching hw_server... 
// Tcl Message: INFO: [Labtools 27-2221] Launch Output:  ****** Xilinx hw_server v2018.2   **** Build date : Jun 14 2018-20:42:52     ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.   
// TclEventType: HW_SERVER_UPDATE
// TclEventType: HW_TARGET_CHANGE
// TclEventType: HW_TARGET_CLOSE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_ADD
// TclEventType: HW_TARGET_UPDATE
// Tcl Message: open_hw_target 
// Tcl Message: INFO: [Labtoolstcl 44-466] Opening hw_target localhost:3121/xilinx_tcf/Digilent/210276A79380B 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: current_hw_device [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
dismissDialog("Auto Connect"); // bx (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 1576.398 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 9 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 18 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1576.398 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 6 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 121 seconds
selectCodeEditor("SecurityCameraCode.v", 310, 362); // ce (w, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 2); // k (j, ck)
// Elapsed time: 16 seconds
selectCodeEditor("motor_control.v", 173, 346); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'c'); // ce (w, ck)
selectCodeEditor("motor_control.v", 80, 325); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
selectCodeEditor("motor_control.v", 133, 352); // ce (w, ck)
selectCodeEditor("motor_control.v", 174, 362); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'c'); // ce (w, ck)
selectCodeEditor("motor_control.v", 188, 362); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_RESET
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 15:54:48 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 202ms to process. Increasing delay to 2000 ms.
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 52 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 15:55:41 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// [GUI Memory]: 118 MB (+3239kb) [00:57:36]
// Elapsed time: 199 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 15:59:01 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 92 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_GOTO_IMPLEMENTED_DESIGN
// bx (ck):  Open Implemented Design : addNotify
// Tcl Message: open_run impl_1 
// HMemoryUtils.trashcanNow. Engine heap size: 1,518 MB. GUI used memory: 60 MB. Current time: 2/21/19 4:00:35 PM CST
// [Engine Memory]: 1,519 MB (+124048kb) [00:59:14]
selectButton(RDIResource.ProgressDialog_CANCEL, "Cancel"); // a (bx)
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW_FAILED
// Tcl Message: INFO: [Common 17-41] Interrupt caught. Command should exit soon. INFO: [Netlist 29-17] Analyzing 2 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2018.2 
// Tcl Message: open_run: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 1647.293 ; gain = 69.555 
// Tcl Message: INFO: [Common 17-344] 'open_run' was cancelled 
// CommandFailedException: ERROR: [Common 17-69] Command failed:  
// 'dP' command handler elapsed time: 7 seconds
dismissDialog("Open Implemented Design"); // bx (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:06 ; elapsed = 00:00:06 . Memory (MB): peak = 1647.293 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 7 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 37 seconds
selectTab((HResource) null, (HResource) null, "Messages", 1); // aE (Q, ck)
// Elapsed time: 44 seconds
selectCodeEditor("motor_control.v", 102, 292); // ce (w, ck)
// Elapsed time: 41 seconds
selectCheckBox(PAResourceItoN.MsgView_INFORMATION_MESSAGES, (String) null, false); // g (aQ, ck): FALSE
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// aj (ck): Save Project: addNotify
dismissDialog("Run Synthesis"); // A (ck)
selectButton(PAResourceQtoS.SaveProjectUtils_CANCEL, "Cancel"); // a (aj)
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Save Project"); // aj (ck)
selectCodeEditor("motor_control.v", 323, 214); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 16:03:06 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 52 seconds
selectRadioButton(PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION, "Run Implementation"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 16:03:59 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// Elapsed time: 152 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 16:06:32 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 88 seconds
selectRadioButton(PAResourceCommand.PACommandNames_REPORTS_WINDOW, "View Reports"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_REPORTS_WINDOW
dismissDialog("Bitstream Generation Completed"); // ah (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1647.293 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 6 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 15 seconds
selectCodeEditor("motor_control.v", 184, 71); // ce (w, ck)
// Elapsed time: 488 seconds
selectButton(PAResourceTtoZ.TaskBanner_CLOSE, (String) null); // k (ay, ck)
closeTask("Program and Debug", "Hardware Manager", "DesignTask.PROGRAM_DEBUG");
// A (ck): Confirm Close: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
dismissDialog("Confirm Close"); // A (ck)
// TclEventType: HW_OBJECT_DELETE
// TclEventType: HW_SERVER_CLOSE
// TclEventType: HW_SYSMON_DELETE
// TclEventType: HW_TARGET_CLOSE
// TclEventType: HW_TARGET_UPDATE
// TclEventType: DEBUG_PROBE_DELETE
// TclEventType: HW_SESSION_CLOSE
// Tcl Message: close_hw 
// bx (ck):  CLose Hardware Manager : addNotify
dismissDialog("CLose Hardware Manager"); // bx (ck)
// Elapsed time: 74 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 4); // k (j, ck)
// Elapsed time: 13 seconds
selectCodeEditor("spi_master.v", 4, 176); // ce (w, ck)
selectCodeEditor("spi_master.v", 89, 467); // ce (w, ck)
// Elapsed time: 17 seconds
selectCodeEditor("spi_master.v", 69, 465); // ce (w, ck)
typeControlKey((HResource) null, "spi_master.v", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 4, false); // B (D, ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 26 seconds
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (C, c)
// F (c): Create Source File: addNotify
// Elapsed time: 10 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "spi_ctrl"); // X (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
// Elapsed time: 15 seconds
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (C, c)
// F (c): Create Source File: addNotify
// Elapsed time: 10 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "spi_shift"); // X (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 51 seconds
dismissDialog("Add Sources"); // c (ck)
// Tcl Message: close [ open C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_shift.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_shift.v 
// Tcl Message: close [ open C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_ctrl.v w ] 
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_ctrl.v 
// I (ck): Define Modules: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("PAResourceAtoD.DefineModulesDialog_YOU_HAVE_MADE_CHANGES_TO_MODULE_Yes", "Yes"); // JButton (A, H)
dismissDialog("Define Modules"); // I (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
selectButton("CANCEL", "Cancel"); // JButton (j, c)
dismissDialog("Add Sources"); // c (ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenuItem(PAResourceCommand.PACommandNames_GOTO_INSTANTIATION, "Go to Source"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_GOTO_INSTANTIATION
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5, true); // B (D, ck) - Node
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (C, c)
// F (c): Create Source File: addNotify
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "spi_shift"); // X (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
// HOptionPane Warning: ''spi_shift.v' already exists. Please enter another name. (Create Source File)'
selectButton("PAResourceAtoD.CreateSrcFileDialog_FILE_WITH_SPECIFIED_NAME_ALREADY_OK", "OK"); // JButton (A, H)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("CANCEL", "Cancel"); // JButton (j, c)
// 'h' command handler elapsed time: 15 seconds
dismissDialog("Add Sources"); // c (ck)
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (C, c)
// F (c): Create Source File: addNotify
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "spi_ctrl"); // X (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
// HOptionPane Warning: ''spi_ctrl.v' already exists. Please enter another name. (Create Source File)'
selectButton("PAResourceAtoD.CreateSrcFileDialog_FILE_WITH_SPECIFIED_NAME_ALREADY_OK", "OK"); // JButton (A, H)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("CANCEL", "Cancel"); // JButton (j, c)
// 'h' command handler elapsed time: 10 seconds
dismissDialog("Add Sources"); // c (ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
selectCodeEditor("spi_shift.v", 8, 466); // ce (w, ck)
typeControlKey((HResource) null, "spi_shift.v", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : spi_ctrl (spi_shift.v)]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : spi_ctrl (spi_shift.v)]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : xil_defaultlib.spi_shift]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : xil_defaultlib.spi_shift]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : xil_defaultlib.spi_shift]", 6, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5, true, false, false, false, true, false); // B (D, ck) - Popup Trigger - Node
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_ADD_OR_CREATE_SOURCE_FILE, "Add"); // B (f, c)
selectButton("CANCEL", "Cancel"); // JButton (j, c)
// 'h' command handler elapsed time: 6 seconds
dismissDialog("Add Sources"); // c (ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : xil_defaultlib.spi_shift]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : xil_defaultlib.spi_shift]", 6, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 80 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 40 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
// ac (ck): Unable to Open File: addNotify
dismissDialog("Unable to Open File"); // ac (ck)
selectCodeEditor("spi_shift.v", 290, 231); // ce (w, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
selectMenuItem(RDIResourceCommand.RDICommands_DELETE, "Remove File from Project..."); // ad (aj, ck)
// Run Command: RDIResourceCommand.RDICommands_DELETE
// aE (ck): Remove Sources: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aE)
dismissDialog("Remove Sources"); // aE (ck)
// Tcl Message: export_ip_user_files -of_objects  [get_files C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_shift.v] -no_script -reset -force -quiet 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: remove_files  C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_shift.v 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5, true); // B (D, ck) - Node
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (C, c)
// F (c): Create Source File: addNotify
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "spi_shift"); // X (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 14 seconds
dismissDialog("Add Sources"); // c (ck)
// Tcl Message: close [ open C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_shift.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.srcs/sources_1/new/spi_shift.v 
// I (ck): Define Module: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("PAResourceAtoD.DefineModulesDialog_YOU_HAVE_MADE_CHANGES_TO_MODULE_Yes", "Yes"); // JButton (A, H)
dismissDialog("Define Module"); // I (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
selectCodeEditor("spi_shift.v", 109, 197); // ce (w, ck)
typeControlKey((HResource) null, "spi_shift.v", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5, true); // B (D, ck) - Node
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (ck): Add Sources: addNotify
// Elapsed time: 10 seconds
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (C, c)
// F (c): Create Source File: addNotify
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "spi_ctrl"); // X (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
// HOptionPane Warning: ''spi_ctrl.v' already exists. Please enter another name. (Create Source File)'
selectButton("PAResourceAtoD.CreateSrcFileDialog_FILE_WITH_SPECIFIED_NAME_ALREADY_OK", "OK"); // JButton (A, H)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("CANCEL", "Cancel"); // JButton (j, c)
// 'h' command handler elapsed time: 19 seconds
dismissDialog("Add Sources"); // c (ck)
// TclEventType: FILE_SET_CHANGE
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v)]", 5, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : xil_defaultlib.spi_ctrl]", 7, false); // B (D, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// Elapsed time: 53 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : spi_ctrl (spi_ctrl.v)]", 6, false); // B (D, ck)
// TclEventType: DG_GRAPH_GENERATED
// [GUI Memory]: 126 MB (+1752kb) [01:25:35]
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), shift : spi_shift (spi_shift.v)]", 5, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : spi_ctrl (spi_ctrl.v)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SecurityCameraCode (SecurityCameraCode.v), MC : motor_control (motor_control.v), SPIM : spi_master (spi_master.v), ctrl : spi_ctrl (spi_ctrl.v)]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_shift.v", 5); // k (j, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 52 seconds
selectCodeEditor("spi_shift.v", 65, 484); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// Elapsed time: 17 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_ctrl.v", 6); // k (j, ck)
// TclEventType: DG_GRAPH_GENERATED
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 4); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 3); // k (j, ck)
// Elapsed time: 21 seconds
selectCodeEditor("motor_control.v", 22, 267); // ce (w, ck)
selectCodeEditor("motor_control.v", 24, 254); // ce (w, ck)
selectCodeEditor("motor_control.v", 8, 261); // ce (w, ck)
selectCodeEditor("motor_control.v", 64, 147); // ce (w, ck)
selectCodeEditor("motor_control.v", 94, 133); // ce (w, ck)
// Elapsed time: 27 seconds
selectCodeEditor("motor_control.v", 109, 163); // ce (w, ck)
// Elapsed time: 19 seconds
selectCodeEditor("motor_control.v", 156, 165); // ce (w, ck)
selectCodeEditor("motor_control.v", 97, 188); // ce (w, ck)
selectCodeEditor("motor_control.v", 98, 184); // ce (w, ck)
// Elapsed time: 28 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 4); // k (j, ck)
selectCodeEditor("spi_master.v", 119, 260); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 15 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 3); // k (j, ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// HMemoryUtils.trashcanNow. Engine heap size: 1,519 MB. GUI used memory: 59 MB. Current time: 2/21/19 4:30:35 PM CST
// Elapsed time: 43 seconds
selectCodeEditor("motor_control.v", 91, 383); // ce (w, ck)
selectCodeEditor("motor_control.v", 82, 405); // ce (w, ck)
selectCodeEditor("motor_control.v", 83, 422); // ce (w, ck)
selectCodeEditor("motor_control.v", 73, 205); // ce (w, ck)
// Elapsed time: 32 seconds
selectCodeEditor("motor_control.v", 51, 355); // ce (w, ck)
// Elapsed time: 18 seconds
selectCodeEditor("motor_control.v", 137, 432); // ce (w, ck)
// Elapsed time: 28 seconds
selectCodeEditor("motor_control.v", 138, 432); // ce (w, ck)
selectCodeEditor("motor_control.v", 151, 433); // ce (w, ck)
// Elapsed time: 41 seconds
selectCodeEditor("motor_control.v", 118, 366); // ce (w, ck)
// Elapsed time: 37 seconds
selectCodeEditor("motor_control.v", 140, 416); // ce (w, ck)
// Elapsed time: 25 seconds
selectCodeEditor("motor_control.v", 104, 302); // ce (w, ck)
// Elapsed time: 32 seconds
selectCodeEditor("motor_control.v", 43, 295); // ce (w, ck)
selectCodeEditor("motor_control.v", 43, 295, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("motor_control.v", 82, 296); // ce (w, ck)
selectCodeEditor("motor_control.v", 147, 347); // ce (w, ck)
// Elapsed time: 17 seconds
selectCodeEditor("motor_control.v", 182, 397); // ce (w, ck)
selectCodeEditor("motor_control.v", 195, 369); // ce (w, ck)
selectCodeEditor("motor_control.v", 77, 266); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 51 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Syntax Error Files]", 1); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Syntax Error Files, spi_master.v]", 2, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Syntax Error Files, spi_master.v]", 2, false, false, false, false, false, true); // B (D, ck) - Double Click
// Elapsed time: 17 seconds
selectCodeEditor("spi_master.v", 217, 285); // ce (w, ck)
// Elapsed time: 19 seconds
selectCodeEditor("spi_master.v", 195, 264); // ce (w, ck)
selectCodeEditor("spi_master.v", 187, 282); // ce (w, ck)
// Elapsed time: 11 seconds
selectCodeEditor("spi_master.v", 238, 381); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 11 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 16:37:30 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 55 seconds
selectRadioButton(PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION, "Run Implementation"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 16:38:27 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// Elapsed time: 170 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 16:41:19 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 98 seconds
selectRadioButton(PAResourceCommand.PACommandNames_REPORTS_WINDOW, "View Reports"); // a (Q, ah)
selectRadioButton(PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER, "Open Hardware Manager"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// bx (ck):  Open Hardware Manager : addNotify
// TclEventType: HW_SESSION_OPEN
// Tcl Message: open_hw 
dismissDialog("Open Hardware Manager"); // bx (ck)
selectButton(PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET, "Hardware_auto_connect_target"); // B (f, ck)
// Run Command: PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET
// Tcl Message: connect_hw_server 
// Tcl Message: INFO: [Labtools 27-2285] Connecting to hw_server url TCP:localhost:3121 
// bx (ck):  Auto Connect : addNotify
// Tcl Message: INFO: [Labtools 27-2222] Launching hw_server... 
// Tcl Message: INFO: [Labtools 27-2221] Launch Output:  ****** Xilinx hw_server v2018.2   **** Build date : Jun 14 2018-20:42:52     ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.   
// TclEventType: HW_SERVER_UPDATE
// TclEventType: HW_TARGET_CHANGE
// TclEventType: HW_TARGET_CLOSE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_ADD
// TclEventType: HW_TARGET_UPDATE
// Tcl Message: open_hw_target 
// Tcl Message: INFO: [Labtoolstcl 44-466] Opening hw_target localhost:3121/xilinx_tcf/Digilent/210276A79380B 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: current_hw_device [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
dismissDialog("Auto Connect"); // bx (ck)
selectTreeTable(PAResourceEtoH.HardwareTreePanel_HARDWARE_TREE_TABLE, "xc7a200t_0 (1) ; Programmed", 2, "xc7a200t_0 (1)", 0, true); // t (O, ck) - Node
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 1650.105 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 8 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 667 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
// Elapsed time: 18 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_ctrl.v", 5); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_shift.v", 4); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "motor_control.v", 2); // k (j, ck)
selectCodeEditor("motor_control.v", 114, 215); // ce (w, ck)
// Elapsed time: 15 seconds
selectCodeEditor("motor_control.v", 99, 296); // ce (w, ck)
selectCodeEditor("motor_control.v", 101, 296, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("motor_control.v", 58, 272); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// Elapsed time: 37 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
// TclEventType: DG_GRAPH_GENERATED
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 16:56:07 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 202 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 16:59:31 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// HMemoryUtils.trashcanNow. Engine heap size: 1,519 MB. GUI used memory: 61 MB. Current time: 2/21/19 5:00:35 PM CST
// TclEventType: RUN_COMPLETED
// Elapsed time: 187 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 17:02:39 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 86 seconds
selectRadioButton(PAResourceCommand.PACommandNames_REPORTS_WINDOW, "View Reports"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_REPORTS_WINDOW
dismissDialog("Bitstream Generation Completed"); // ah (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1652.957 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 7 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 38 seconds
selectCodeEditor("motor_control.v", 59, 328); // ce (w, ck)
selectCodeEditor("motor_control.v", 160, 246); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'c'); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
selectCodeEditor("motor_control.v", 59, 282); // ce (w, ck)
selectCodeEditor("motor_control.v", 155, 55); // ce (w, ck)
selectCodeEditor("motor_control.v", 78, 280); // ce (w, ck)
// Elapsed time: 38 seconds
selectCodeEditor("motor_control.v", 48, 350); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'c'); // ce (w, ck)
selectCodeEditor("motor_control.v", 27, 379); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
selectCodeEditor("motor_control.v", 80, 396); // ce (w, ck)
selectCodeEditor("motor_control.v", 54, 415); // ce (w, ck)
selectCodeEditor("motor_control.v", 216, 383); // ce (w, ck)
selectCodeEditor("motor_control.v", 124, 396); // ce (w, ck)
selectCodeEditor("motor_control.v", 223, 398); // ce (w, ck)
selectCodeEditor("motor_control.v", 159, 58); // ce (w, ck)
selectCodeEditor("motor_control.v", 159, 157); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'c'); // ce (w, ck)
selectCodeEditor("motor_control.v", 165, 163); // ce (w, ck)
typeControlKey((HResource) null, "motor_control.v", 'v'); // ce (w, ck)
selectCodeEditor("motor_control.v", 123, 180); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
// TclEventType: DG_GRAPH_GENERATED
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_RESET
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 17:06:30 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 50 seconds
selectRadioButton(PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION, "Run Implementation"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 17:07:22 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// Elapsed time: 198 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 17:10:41 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 77 seconds
selectRadioButton(PAResourceCommand.PACommandNames_REPORTS_WINDOW, "View Reports"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_REPORTS_WINDOW
dismissDialog("Bitstream Generation Completed"); // ah (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1654.613 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 7 seconds
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 362 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
// Elapsed time: 10 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_shift.v", 4); // k (j, ck)
selectCodeEditor("spi_shift.v", 116, 246); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 12 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_ctrl.v", 5); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_shift.v", 4); // k (j, ck)
selectCodeEditor("spi_shift.v", 179, 414); // ce (w, ck)
// Elapsed time: 21 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
// Elapsed time: 12 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_shift.v", 4); // k (j, ck)
selectCodeEditor("spi_shift.v", 118, 213); // ce (w, ck)
selectCodeEditor("spi_shift.v", 65, 263); // ce (w, ck)
selectCodeEditor("spi_shift.v", 67, 263); // ce (w, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
selectButton(RDIResourceCommand.RDICommands_UNDO, "undo"); // B (f, ck)
// Elapsed time: 25 seconds
selectCodeEditor("spi_shift.v", 69, 260); // ce (w, ck)
selectCodeEditor("spi_shift.v", 118, 214); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 36 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_ctrl.v", 5); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "SecurityCameraCode.v", 0); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
// Elapsed time: 23 seconds
selectCodeEditor("spi_master.v", 117, 60); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_ctrl.v", 5); // k (j, ck)
// Elapsed time: 36 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "spi_master.v", 3); // k (j, ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (ck): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Run Synthesis"); // A (ck)
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Thu Feb 21 17:22:13 2019] Launched synth_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_COMPLETED
// ah (ck): Synthesis Completed: addNotify
// Elapsed time: 56 seconds
selectRadioButton(PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION, "Run Implementation"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_RUN_IMPLEMENTATION
// bx (ck):  Starting Design Runs : addNotify
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -jobs 2 
// Tcl Message: [Thu Feb 21 17:23:11 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// Elapsed time: 166 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// Tcl Message: [Thu Feb 21 17:25:58 2019] Launched impl_1... Run output will be captured here: C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 119 seconds
selectRadioButton(PAResourceCommand.PACommandNames_REPORTS_WINDOW, "View Reports"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_REPORTS_WINDOW
dismissDialog("Bitstream Generation Completed"); // ah (ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Open Hardware Manager, Program Device]", 23, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
selectMenuItem((HResource) null, "xc7a200t_0"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {C:/Users/jtb14b/Documents/GitHub/ACESSecurityCamera/ACESSecurityCamera/ACESSecurityCameraCode/ACESSecurityCameraCode.runs/impl_1/SecurityCameraCode.bit} [get_hw_devices xc7a200t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a200t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// Tcl Message: program_hw_devices: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 1656.371 ; gain = 0.000 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a200t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a200t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// 'I' command handler elapsed time: 7 seconds
dismissDialog("Program Device"); // bx (ck)
// HMemoryUtils.trashcanNow. Engine heap size: 1,519 MB. GUI used memory: 61 MB. Current time: 2/21/19 5:30:36 PM CST
